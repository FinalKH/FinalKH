<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="review">
<!-- 
테이블 
alter table review drop primary key cascade;
drop sequence seq_review;
drop table review;
create table review(
bno number not null primary key,
subject varchar2(200),
content varchar2(4000),
regdate date default sysdate,
viewcnt number default 0,
show char(1) default 'y'
); 

create sequence seq_review
increment by 1
start with 1;
 -->
    <!-- 후기 작성 -->
	<insert id="insert">
		<!-- 글 번호를 시퀀스로 생성 -->
		INSERT INTO review (
		  bno, subject, writer, content, show, email
		) VALUES (
		   seq_review.NEXTVAL, #{subject}, #{writer}, #{content} , 'y', #{email}
		)
	</insert>
    
    <!-- 전체목록조회 -->
    <select id="listAll" resultType="com.kh.web.model.travel.dto.ReviewVO" >
    <!-- 페이징 -->
	<include refid="pagingHeader"></include>
    SELECT
    	ROWNUM, bno, subject, content, regdate, viewcnt, show 
	FROM
		review r, userinfo u
		<!-- 검색 조건 -->
	<include refid="search"></include>
    order by bno desc, regdate desc
    <!-- 페이징 -->
	<include refid="pagingFooter"></include>
    </select>
    
    <!-- 검색 조건 sql -->
	<sql id="search">
		<choose>
			<!-- 검색옵션이 전체 검색일 경우 -->
			<when test="searchOption == 'all'">
				WHERE 
					r.writer = u.userid
				AND	
					(user_name like '%'||#{keyword}||'%'
				OR 
					content like '%'||#{keyword}||'%'
				OR 
					subject like '%'||#{keyword}||'%')
			</when>
			<!-- 전체 검색이 아닐 경우 -->
			<otherwise>
				WHERE 
					r.writer = u.userid 
				AND 
					${searchOption} like '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>
    <!-- 페이징 sql -->
	<sql id="pagingHeader">
		SELECT * FROM (
			SELECT ROWNUM AS rn, A.* FROM (
	</sql>
	<sql id="pagingFooter">
			) A
		) WHERE rn BETWEEN #{start} AND #{end}
	</sql>
    <!-- 후기 보기 -->
    <select id="view" resultType="com.kh.web.model.travel.dto.ReviewVO">
		<!-- SELECT * FROM tbl_board  -->
		SELECT 
			bno, subject, content, regdate, writer, viewcnt, r.email, show
		FROM 
			review r, t_userinfo u
		WHERE
			r.email = u.email
		AND
			bno = #{bno}
	</select>
	<!-- 조회수 -->
	<update id="viewcnt">
		UPDATE 
			review
		SET 
			viewcnt = viewcnt + 1 
		WHERE 
			bno = #{bno}
	</update>
	
	<!-- 후기 수정 -->
	<update id="update">
	UPDATE
		review
	SET
		subject = #{subject},
		content = #{content}
	WHERE
		bno = #{bno}
	</update>
	
	<!-- 후기 삭제 -->
	<update id="deleteArticle">
	UPDATE
		review
	SET
		show = 'n'
	WHERE
		bno = #{bno}
	</update>
	
</mapper>